<Page x:Class="Sanguosha.UI.Controls.LobbyView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Sanguosha.UI.Controls"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"      
             xmlns:res="clr-namespace:Sanguosha.UI.Resources;assembly=Resources"
             mc:Ignorable="d" 
             d:DesignHeight="700" d:DesignWidth="1024" Loaded="Page_Loaded" UseLayoutRounding="True">
    <Page.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/Controls;component/Common.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/Resources;component/System.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/Resources;component/Lobby.xaml"/>                
            </ResourceDictionary.MergedDictionaries>
            <LinearGradientBrush x:Key="TextBoxBorder" EndPoint="0,20" MappingMode="Absolute" StartPoint="0,0">
                <GradientStop Color="#ABADB3" Offset="0.05"/>
                <GradientStop Color="#E2E3EA" Offset="0.07"/>
                <GradientStop Color="#E3E9EF" Offset="1"/>
            </LinearGradientBrush>
            <ControlTemplate x:Key="ThinScrollViewerControlTemplate" TargetType="{x:Type ScrollViewer}">
                <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Rectangle x:Name="Corner" Grid.Column="1" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Grid.Row="1"/>
                    <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="0" Margin="{TemplateBinding Padding}" Grid.Row="0"/>
                    <ScrollBar x:Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Grid.Row="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" BorderBrush="#FF363229" BorderThickness="1"/>
                    <ScrollBar x:Name="PART_HorizontalScrollBar" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}"/>
                </Grid>
            </ControlTemplate>
            <Style x:Key="{x:Type TextBoxBase}" BasedOn="{x:Null}" TargetType="{x:Type TextBoxBase}">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
                <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorder}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Padding" Value="1"/>
                <Setter Property="AllowDrop" Value="true"/>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
                <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBoxBase}">
                            <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Template="{DynamicResource ThinScrollViewerControlTemplate}" FontFamily="SimSun" Foreground="#FFF6DE9C"/>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="{x:Type Hyperlink}" TargetType="{x:Type Hyperlink}">
                <Setter Property="Foreground" Value="Blue"/>
                <Setter Property="TextDecorations" Value="Underline"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="true">
                        <Setter Property="Foreground" Value="Red"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="false">
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="true">
                        <Setter Property="Cursor" Value="Hand"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="RichTextBoxStyle" TargetType="{x:Type RichTextBox}">
                <Style.Resources>
                    <Style x:Key="{x:Type FlowDocument}" TargetType="{x:Type FlowDocument}">
                        <Setter Property="OverridesDefaultStyle" Value="true"/>
                    </Style>
                    <Style x:Key="{x:Type Hyperlink}" BasedOn="{StaticResource {x:Type Hyperlink}}" TargetType="{x:Type Hyperlink}">
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Foreground" Value="Blue"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Style.Resources>
                <Setter Property="MinWidth" Value="10"/>
                <Style.BasedOn>
                    <StaticResource ResourceKey="{x:Type TextBoxBase}"/>
                </Style.BasedOn>
            </Style>
            <local:RoomButtonVisibilityConverter x:Key="roomButtonVisibilityConverter" />
            <local:CurrentRoomAndSeatToButtonStateConverter x:Key="currentRoomAndSeatToButtonStateConverter"/>
            <local:SeatStateToControlStatusConverter x:Key="seatStateToControlStatusConverter" />
        </ResourceDictionary>
    </Page.Resources>
    <Grid>
        <Grid.Background>
            <ImageBrush ImageSource="{DynamicResource Game.Table.Background}"/>
        </Grid.Background>
        <Grid.RowDefinitions>
            <RowDefinition Height="20" />
            <RowDefinition Height="*" />
            <RowDefinition Height="190" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="541"/>
        </Grid.ColumnDefinitions>
        <Border BorderThickness="1" BorderBrush="Black" Grid.Row="1">
            <Border BorderThickness="1" BorderBrush="#FF8C8782" >
                <Border BorderThickness="1" BorderBrush="Black" Background="#FF4A3B2D" >
                    <DataGrid x:Name="gridRooms" RowHeaderWidth="0" Block.TextAlignment="Center"
                              Margin="10"
                              ItemsSource="{Binding Rooms, Mode=OneWay}" AutoGenerateColumns="False"
                              IsReadOnly="True" SelectionMode="Single" 
                              Background="Transparent" Foreground="#FFE4D5A0" HeadersVisibility="Column" FontFamily="SimSun"
                              HorizontalAlignment="Stretch"
                              HorizontalScrollBarVisibility="Hidden"
                              SelectionUnit="FullRow" Style="{DynamicResource DataGridStyle1}">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="房号" Binding="{Binding Id}" Width="50" />
                            <DataGridTextColumn Header="模式" Binding="{res:ResourceKeyBinding Path=ModeString, StringFormat=GameMode.{0}.Name}" Width="100" />
                            <DataGridTextColumn Header="时间" Binding="{Binding Settings.TimeOutSeconds, StringFormat=\{0\}秒}"  Width="50" />
                            <DataGridTextColumn Header="选将" Binding="{Binding Settings.NumHeroPicks}" Width="50" />
                            <DataGridTextColumn Header="人数" Binding="{Binding OpenSeatString}" Width="60" />
                            <DataGridTemplateColumn Header="状态" SortMemberPath="State" Width="70" >
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{res:ResourceKeyBinding Path=State, StringFormat=RoomState.{0}.Name}" Foreground="{res:ResourceKeyBinding Path=State, StringFormat=RoomState.{0}.Color}" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="操作" Width="1*">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                                            <Button Content="查看" Style="{DynamicResource DefaultButtonStyleRed}" VerticalAlignment="Center" Click="viewRoomButton_Click">
                                                <Button.Visibility>
                                                    <MultiBinding Converter="{StaticResource roomButtonVisibilityConverter}" ConverterParameter="View">
                                                        <Binding Path="Id"/>
                                                        <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}" Path="DataContext.CurrentRoom.Id"/>
                                                        <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}" Path="DataContext.CurrentSeat"/>
                                                    </MultiBinding>
                                                </Button.Visibility>
                                            </Button>
                                            <Button Content="加入" Style="{DynamicResource DefaultButtonStyleRed}" Margin="2,0,0,0" VerticalAlignment="Center" Click="enterRoomButton_Click" >
                                                <Button.Visibility>
                                                    <MultiBinding Converter="{StaticResource roomButtonVisibilityConverter}" ConverterParameter="Enter">
                                                        <Binding Path="Id" />
                                                        <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}" Path="DataContext.CurrentRoom.Id"/>
                                                        <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}" Path="DataContext.CurrentSeat"/>
                                                    </MultiBinding>
                                                </Button.Visibility>
                                            </Button>
                                        </StackPanel>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                </Border>
            </Border>
        </Border>
        <Grid Grid.Row="1" Grid.Column="1" Grid.RowSpan="2">
            <Border Margin="4, 10, 0, 0" BorderThickness="1" CornerRadius="3" BorderBrush="Black" >
                <Border BorderThickness="1" CornerRadius="3" BorderBrush="#FFA59579" >
                    <Border BorderThickness="1" CornerRadius="3" BorderBrush="Black" >
                        <Border.Background>
                            <ImageBrush ImageSource="/Resources;component/Images/Lobby/roomBg.jpg" Viewport="0,0,525,255" ViewportUnits="Absolute" TileMode="FlipXY"/>
                        </Border.Background>
                        <Grid Margin="0,15,0,184">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="0.5*" />
                                <ColumnDefinition Width="80" />
                                <ColumnDefinition Width="0.5*" />
                            </Grid.ColumnDefinitions>

                            <ItemsControl ItemsSource="{Binding CurrentRoom.LeftSeats}" Margin="0,0,0,0">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <UniformGrid Columns="1" />
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <local:SeatView Width="207" Height="116" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="3,0,0,0" 
                                                        IsControllable="{Binding State, Converter={StaticResource seatStateToControlStatusConverter}}" />
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                            <ItemsControl Grid.Column="2" ItemsSource="{Binding CurrentRoom.RightSeats}" Margin="0,0,0,0">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <UniformGrid Columns="1" />
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <local:SeatView Width="207" Height="116" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,3,0"
                                                        IsControllable="{Binding State, Converter={StaticResource seatStateToControlStatusConverter}}" />
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </Grid>
                    </Border>
                </Border>
            </Border>
            <Image HorizontalAlignment="Left" Height="25" Margin="30,2,0,0" Source="/Resources;component/Images/Lobby/roomInfo.png" Stretch="Fill" VerticalAlignment="Top" Width="85" d:LayoutOverrides="GridBox"/>
        </Grid>
        <Grid Grid.Row="2">
            <Grid x:Name="roomNavigationPanel" VerticalAlignment="Top" Height="25" Margin="0,2,0,0">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Top">
                    <Button Content="刷新列表" Command="{Binding UpdateRoomCommand}" Margin="3,0" Width="65" Style="{DynamicResource DefaultButtonStyle1}"/>
                    <Button x:Name="btnCreateRoom" Click="btnCreateRoom_Click" Content="创建房间" Margin="3,0" Width="65" Style="{DynamicResource DefaultButtonStyleBrown}"/>
                </StackPanel>
            </Grid>
            <Border Grid.Row="1" Margin="0,34,0,0" BorderThickness="1" CornerRadius="3" BorderBrush="Black" >
                <Border BorderThickness="1" CornerRadius="3" BorderBrush="#FFA59579" >
                    <Border BorderThickness="1" CornerRadius="3" BorderBrush="Black" Background="#FF4A3B2D" Margin="0,0,-1,0" >
                        <Grid>
                            <RichTextBox x:Name="chatBox" Margin="0,0,0,18.687" Background="Transparent" Style="{DynamicResource RichTextBoxStyle}" Foreground="#FFDCDBBD" FontFamily="SimSun" FontSize="13.333" BorderBrush="Transparent" IsReadOnly="True" IsReadOnlyCaretVisible="True" VerticalScrollBarVisibility="Auto" >
                                <RichTextBox.Resources>
                                    <Style TargetType="{x:Type Paragraph}">
                                        <Setter Property="Margin" Value="0,5"/>
                                    </Style>
                                </RichTextBox.Resources>
                                <FlowDocument />
                            </RichTextBox>
                            <local:ChatWidget Background="#FF191919" VerticalAlignment="Bottom" Height="19" Margin="0,0,0,0"/>
                        </Grid>
                    </Border>
                </Border>
            </Border>
        </Grid>
        <Grid HorizontalAlignment="Right" VerticalAlignment="Bottom" Grid.Column="1" Grid.Row="2" ClipToBounds="True">
            <Image Margin="4,0,4,-12.01" Source="/Resources;component/Images/Lobby/notch.png" Stretch="None" VerticalAlignment="Bottom" />
            <local:LobbyMainButton Width="90" Height="100" HorizontalAlignment="Left" Margin="45,29.254,0,9.639" >
                <local:LobbyMainButton.State>
                    <MultiBinding Converter="{StaticResource currentRoomAndSeatToButtonStateConverter}">
                        <Binding Path="CurrentRoom" />
                        <Binding Path="CurrentSeat" />
                    </MultiBinding>
                </local:LobbyMainButton.State>
            </local:LobbyMainButton>
            <Image Source="/Resources;component/Images/Lobby/buttonDock.png" Stretch="None" VerticalAlignment="Bottom" HorizontalAlignment="Right" Margin="0,0,-39,0"/>
        </Grid>
        <local:KeyEventNotifierView x:Name="keyEventNotifier" IsHitTestVisible="False" Height="250" VerticalAlignment="Center" Grid.ColumnSpan="2" Grid.Row="1" />
        <Menu x:Name="mainMenu" Style="{DynamicResource MainMenuStyle}" Grid.ColumnSpan="2">
            <MenuItem Padding="0" Style="{DynamicResource MenuItemStyle1}" Height="20">
                <MenuItem.Header>
                    <Grid>
                        <Button x:Name="muteButton" Style="{DynamicResource MuteButtonStyle}" Visibility="Collapsed" Click="muteButton_Click" />
                        <Button x:Name="soundButton" Style="{DynamicResource SoundButtonStyle}" Click="soundButton_Click"/>
                    </Grid>
                </MenuItem.Header>
            </MenuItem>
            <MenuItem Padding="0" Style="{DynamicResource MenuItemStyle1}" Height="20">
                <MenuItem.Header>
                    <Button Style="{DynamicResource DefaultButtonStyleDark}" Height="20" Padding="1,0,2,0" Margin="0,0,0,0">
                        <Image Height="14" Source="/Resources;component/Images/System/btnSettings.png" Stretch="Fill" Width="16"/>
                    </Button>
                </MenuItem.Header>
            </MenuItem>
            <MenuItem Padding="0" Style="{DynamicResource MenuItemStyle1}" Height="20">
                <MenuItem.Header>
                    <Button x:Name="btnGoback" Content="返回" Style="{DynamicResource DefaultButtonStyleRed}" Height="20" Padding="2,0,4,0" Margin="0,0,0,0" Click="btnGoback_Click" />
                </MenuItem.Header>
            </MenuItem>
        </Menu>
        <xctk:ChildWindow x:Name="createRoomWindow" Grid.Row="1" Grid.RowSpan="2" Grid.ColumnSpan="2" WindowStartupLocation="Center" Caption="创建房间" Template="{StaticResource StoneWindowStyle2}" >
            <Grid>
                <Grid.Resources>
                    <Style x:Key="{x:Type TextBlock}" TargetType="{x:Type TextBlock}">
                        <Setter Property="Foreground" Value="#FFE4D5A0" />	
                        <Setter Property="TextAlignment" Value="Right" />				
                        <Setter Property="FontFamily" Value="SimSun" />
                        <Setter Property="TextWrapping" Value="NoWrap"/>
                        <Setter Property="TextTrimming" Value="None"/>
                    </Style>
                    <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}" BasedOn="{StaticResource ComboBoxStyle1}">
                        <Setter Property="Foreground" Value="#FFE5DCBF"/>
                        <Setter Property="FontFamily" Value="SimSun"/>
                        <Setter Property="Height" Value="23" />
                    </Style>
                    <Style x:Key="{x:Type CheckBox}" TargetType="{x:Type CheckBox}" BasedOn="{StaticResource CheckBoxStyle1}" />
                </Grid.Resources>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="30" />
                    <RowDefinition Height="30" />
                    <RowDefinition Height="30" />
                    <RowDefinition Height="30" />
                    <RowDefinition Height="30" />
                    <RowDefinition Height="30" />
                    <RowDefinition Height="30" />
                    <RowDefinition Height="30" />
                </Grid.RowDefinitions>
                <TextBlock Text="游戏模式" VerticalAlignment="Center" />
                <ComboBox IsEnabled="False" Grid.Column="2" VerticalAlignment="Center" Margin="0,0,10,0" SelectedIndex="0">
                    <ComboBoxItem Content="8人身份场" IsSelected="False" Foreground="White" />
                </ComboBox>
                <TextBlock Text="双将" Grid.Row="1" VerticalAlignment="Center"/>
                <CheckBox x:Name="cbDualHero" Grid.Row="1" Grid.Column="2" VerticalAlignment="Center"/>
                <TextBlock Text="双内奸" Grid.Row="2" VerticalAlignment="Center" />
                <CheckBox x:Name="cbDualDefector" Grid.Row="2" Grid.Column="2" VerticalAlignment="Center"/>
                <TextBlock Text="选将数" Grid.Row="3" VerticalAlignment="Center"/>
                <ComboBox x:Name="cbHeroPickCount" Grid.Row="3" Grid.Column="2" VerticalAlignment="Center" HorizontalAlignment="Left" Width="40" SelectedIndex="1">
                    <ComboBoxItem Content="3" />
                    <ComboBoxItem Content="4" />
                    <ComboBoxItem Content="5" />
                    <ComboBoxItem Content="6" />
                </ComboBox>
                <TextBlock Text="出牌时间" Grid.Row="4" VerticalAlignment="Center"/>
                <ComboBox x:Name="cbTimeOutSeconds" Grid.Row="4" Grid.Column="2" VerticalAlignment="Center" HorizontalAlignment="Left" SelectedIndex="1">
                    <ComboBoxItem Content="10 秒" />
                    <ComboBoxItem Content="15 秒" />
                    <ComboBoxItem Content="20 秒" />
                    <ComboBoxItem Content="30 秒" />
                </ComboBox>
                <TextBlock Text="卡牌扩展" Grid.Row="5" VerticalAlignment="Center"/>
                <UniformGrid Columns="4" Grid.Row="5" Grid.Column="2" VerticalAlignment="Center">
                    <CheckBox Content="Ex" IsChecked="True" IsEnabled="False" Margin="0,0,10,0" />
                    <CheckBox Content="军" IsChecked="True" IsEnabled="False" Margin="0,0,10,0" />
                </UniformGrid>
                <TextBlock Text="武将扩展" Grid.Row="6" VerticalAlignment="Top"/>
                <UniformGrid Columns="4" Grid.Row="6" Grid.Column="2" VerticalAlignment="Center">
                    <CheckBox Content="风" IsChecked="True" IsEnabled="False" Margin="0,0,10,0"/>
                    <CheckBox Content="火" IsChecked="True" IsEnabled="False" Margin="0,0,10,0"/>
                    <CheckBox Content="林" IsChecked="True" IsEnabled="False" Margin="0,0,10,0"/>
                    <CheckBox Content="山" IsChecked="True" IsEnabled="False" Margin="0,0,10,0"/>
                    <CheckBox Content="神" IsChecked="True" IsEnabled="False" Margin="0,0,10,0"/>
                    <CheckBox Content="SP" IsChecked="True" IsEnabled="False" Margin="0,0,10,0"/>
                    <CheckBox Content="将" IsChecked="True" IsEnabled="False" Margin="0,0,10,0"/>
                </UniformGrid>
                <StackPanel Grid.Row="7" Grid.ColumnSpan="3"  HorizontalAlignment="Center" VerticalAlignment="Bottom" Orientation="Horizontal">
                    <Button Content="确定" Margin="3,0" Width="45" Height="22" Style="{DynamicResource DefaultButtonStyleBrown}" Click="btnCreateRoomConfirm_Click" />
                    <Button Content="取消" Margin="20,0" Width="45" Height="22" Style="{DynamicResource DefaultButtonStyle1}" Click="btnCreateRoomCancel_Click" />
                </StackPanel>
                <xctk:BusyIndicator Grid.RowSpan="8" x:Name="busyIndicator" Style="{DynamicResource BusyIndicatorStyle1}" Margin="7,-33,-686,-407" Grid.ColumnSpan="3" d:IsHidden="True" />
            </Grid>
        </xctk:ChildWindow>
    </Grid>
</Page>
