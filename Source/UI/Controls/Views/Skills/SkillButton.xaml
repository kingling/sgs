<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:res="clr-namespace:Sanguosha.UI.Resources;assembly=Resources"
    mc:Ignorable="d"
    xmlns:Sanguosha_UI_Effects="clr-namespace:Sanguosha.UI.Effects;assembly=Effects"
    xmlns:local="clr-namespace:Sanguosha.UI.Controls">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../Buttons/CardButton.xaml"/>
        <ResourceDictionary Source="SkillToolTip.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/Resources;component/Images/SystemImages.xaml"/>        
    </ResourceDictionary.MergedDictionaries>
    <Style x:Key="SkillButtonStyle" TargetType="{x:Type ToggleButton}">        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />                                
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="gridHoverAppearance">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed" />                                
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="gridDisabledAppearance">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="gridNormalAppearance">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(Sanguosha_UI_Effects:MonochromeEffect.Strength)" Storyboard.TargetName="imgHero">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" To="Checked"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="gridDownAppearance">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked">
                                </VisualState>
                                <VisualState x:Name="Indeterminate" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border>
                            <Grid>
                                <Grid x:Name="gridNormalAppearance">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="24"/>
                                        <ColumnDefinition Width="1*"/>
                                        <ColumnDefinition Width="21"/>
                                    </Grid.ColumnDefinitions>
                                    <Image HorizontalAlignment="Right" Stretch="Fill" Source="{res:ResourceKeyBinding Path=SkillType, StringFormat=Button.Skill.\{0\}.Up.Left}"/>
                                    <Image Grid.Column="2" Stretch="Fill" Source="{res:ResourceKeyBinding Path=SkillType, StringFormat=Button.Skill.\{0\}.Up.Right}"/>
                                    <Image Margin="-1,0" Grid.Column="1" Stretch="Fill" Source="{res:ResourceKeyBinding Path=SkillType, StringFormat=Button.Skill.\{0\}.Up.Middle}"/>                        
                                </Grid>
                                
                                <Grid x:Name="gridHoverAppearance" Visibility="Hidden">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="24"/>
                                        <ColumnDefinition Width="1*"/>
                                        <ColumnDefinition Width="21"/>
                                    </Grid.ColumnDefinitions>
                                    <Image HorizontalAlignment="Right" Stretch="Fill" Source="{res:ResourceKeyBinding Path=SkillType, StringFormat=Button.Skill.\{0\}.Hover.Left}"/>                                    
                                    <Image Grid.Column="2" Stretch="Fill" Source="{res:ResourceKeyBinding Path=SkillType, StringFormat=Button.Skill.\{0\}.Hover.Right}"/>
                                    <Image Margin="-1,0"  Grid.Column="1" Stretch="Fill" Source="{res:ResourceKeyBinding Path=SkillType, StringFormat=Button.Skill.\{0\}.Hover.Middle}"/>
                                </Grid>
                                
                                <Grid x:Name="gridDownAppearance" Visibility="Hidden">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="24"/>
                                        <ColumnDefinition Width="1*"/>
                                        <ColumnDefinition Width="21"/>
                                    </Grid.ColumnDefinitions>
                                    <Image HorizontalAlignment="Right" Stretch="Fill" Source="{res:ResourceKeyBinding Path=SkillType, StringFormat=Button.Skill.\{0\}.Down.Left}"/>                                    
                                    <Image Grid.Column="2" Stretch="Fill" Source="{res:ResourceKeyBinding Path=SkillType, StringFormat=Button.Skill.\{0\}.Down.Right}"/>
                                    <Image Margin="-1,0" Grid.Column="1" Stretch="Fill" Source="{res:ResourceKeyBinding Path=SkillType, StringFormat=Button.Skill.\{0\}.Down.Middle}"/>
                                </Grid>
                                
                                <Grid x:Name="gridDisabledAppearance" Visibility="Hidden">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="24"/>
                                        <ColumnDefinition Width="1*"/>
                                        <ColumnDefinition Width="21"/>
                                    </Grid.ColumnDefinitions>
                                    <Image HorizontalAlignment="Right" Stretch="Fill" Source="{res:ResourceKeyBinding Path=SkillType, StringFormat=Button.Skill.\{0\}.Disabled.Left}"/>                                    
                                    <Image Grid.Column="2" Stretch="Fill" Source="{res:ResourceKeyBinding Path=SkillType, StringFormat=Button.Skill.\{0\}.Disabled.Right}"/>
                                    <Image Margin="-1,0" Grid.Column="1" Stretch="Fill" Source="{res:ResourceKeyBinding Path=SkillType, StringFormat=Button.Skill.\{0\}.Disabled.Middle}"/>
                                </Grid>

                                <Grid x:Name="spinBorderGrids">
                                    <Grid x:Name="border0" Margin="1" Visibility="Hidden">
                                        <Grid.OpacityMask>
                                            <ImageBrush ImageSource="../Resources/SkillButton/border/mask0.png"/>
                                        </Grid.OpacityMask>
                                        <Rectangle Stroke="#FFFA7F00" StrokeThickness="3" RadiusX="2" RadiusY="2">
                                            <Rectangle.Effect>
                                                <BlurEffect/>
                                            </Rectangle.Effect>
                                        </Rectangle>
                                        <Rectangle Fill="Transparent" Margin="1" Stroke="#FFFDFCFA" RadiusX="2" RadiusY="2"/>
                                    </Grid>
                                    <Grid x:Name="border1" Margin="1" Visibility="Hidden">
                                        <Grid.OpacityMask>
                                            <ImageBrush ImageSource="../Resources/SkillButton/border/mask1.png"/>
                                        </Grid.OpacityMask>
                                        <Rectangle Stroke="#FFFA7F00" StrokeThickness="3" RadiusX="2" RadiusY="2">
                                            <Rectangle.Effect>
                                                <BlurEffect/>
                                            </Rectangle.Effect>
                                        </Rectangle>
                                        <Rectangle Fill="Transparent" Margin="1" Stroke="#FFFDFCFA" RadiusX="2" RadiusY="2"/>
                                    </Grid>
                                    <Grid x:Name="border2" Margin="1" Visibility="Hidden">
                                        <Grid.OpacityMask>
                                            <ImageBrush ImageSource="../Resources/SkillButton/border/mask2.png"/>
                                        </Grid.OpacityMask>
                                        <Rectangle Stroke="#FFFA7F00" StrokeThickness="3" RadiusX="2" RadiusY="2">
                                            <Rectangle.Effect>
                                                <BlurEffect/>
                                            </Rectangle.Effect>
                                        </Rectangle>
                                        <Rectangle Fill="Transparent" Margin="1" Stroke="#FFFDFCFA" RadiusX="2" RadiusY="2"/>
                                    </Grid>
                                    <Grid x:Name="border3" Margin="1" Visibility="Hidden">
                                        <Grid.OpacityMask>
                                            <ImageBrush ImageSource="../Resources/SkillButton/border/mask3.png"/>
                                        </Grid.OpacityMask>
                                        <Rectangle Stroke="#FFFA7F00" StrokeThickness="3" RadiusX="2" RadiusY="2">
                                            <Rectangle.Effect>
                                                <BlurEffect/>
                                            </Rectangle.Effect>
                                        </Rectangle>
                                        <Rectangle Fill="Transparent" Margin="1" Stroke="#FFFDFCFA" RadiusX="2" RadiusY="2"/>
                                    </Grid>
                                    <Grid x:Name="border4" Margin="1" Visibility="Hidden">
                                        <Grid.OpacityMask>
                                            <ImageBrush ImageSource="../Resources/SkillButton/border/mask4.png"/>
                                        </Grid.OpacityMask>
                                        <Rectangle Stroke="#FFFA7F00" StrokeThickness="3" RadiusX="2" RadiusY="2">
                                            <Rectangle.Effect>
                                                <BlurEffect/>
                                            </Rectangle.Effect>
                                        </Rectangle>
                                        <Rectangle Fill="Transparent" Margin="1" Stroke="#FFFDFCFA" RadiusX="2" RadiusY="2"/>
                                    </Grid>
                                    <Grid x:Name="border5" Margin="1" Visibility="Hidden">
                                        <Grid.OpacityMask>
                                            <ImageBrush ImageSource="../Resources/SkillButton/border/mask5.png"/>
                                        </Grid.OpacityMask>
                                        <Rectangle Stroke="#FFFA7F00" StrokeThickness="3" RadiusX="2" RadiusY="2">
                                            <Rectangle.Effect>
                                                <BlurEffect/>
                                            </Rectangle.Effect>
                                        </Rectangle>
                                        <Rectangle Fill="Transparent" Margin="1" Stroke="#FFFDFCFA" RadiusX="2" RadiusY="2"/>
                                    </Grid>
                                    <Grid x:Name="border6" Margin="1" Visibility="Hidden">
                                        <Grid.OpacityMask>
                                            <ImageBrush ImageSource="../Resources/SkillButton/border/mask6.png"/>
                                        </Grid.OpacityMask>
                                        <Rectangle Stroke="#FFFA7F00" StrokeThickness="3" RadiusX="2" RadiusY="2">
                                            <Rectangle.Effect>
                                                <BlurEffect/>
                                            </Rectangle.Effect>
                                        </Rectangle>
                                        <Rectangle Fill="Transparent" Margin="1" Stroke="#FFFDFCFA" RadiusX="2" RadiusY="2"/>
                                    </Grid>
                                </Grid>
                            </Grid>
                        </Border>
                        <Border Margin="15,0,0,0">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        
                        <Canvas IsHitTestVisible="False">
                            <Image x:Name="imgHero" Canvas.Left="0" Canvas.Bottom="0" Source="{res:ImageBinding Path=HeroName, ResourceKeyFormat=Hero.\{0\}.Image.Tiny, StringFormat=Resources/Images/Heroes/Tiny/\{0\}.png}">
                                <Image.Effect>
                                    <Sanguosha_UI_Effects:MonochromeEffect Strength="0"/>
                                </Image.Effect>
                            </Image>
                        </Canvas>

                        <Image Source="../Resources/SkillButton/lock/locked.png" Stretch="Uniform" HorizontalAlignment="Center" VerticalAlignment="Center" x:Name="imgLock" Opacity="0" RenderTransformOrigin="0.5,0.5" IsHitTestVisible="False">
                            <Image.RenderTransform>
                                <ScaleTransform/>                                
                            </Image.RenderTransform>
                        </Image>
                        <Image Source="../Resources/SkillButton/lock/Unlocked.png" Stretch="Uniform" HorizontalAlignment="Center" VerticalAlignment="Center" x:Name="imgUnlock" Opacity="0" RenderTransformOrigin="0.5,0.5" IsHitTestVisible="False">
                            <Image.RenderTransform>
                                <ScaleTransform/>
                            </Image.RenderTransform>
                        </Image>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsAutoInvokeSkill}" Value="true" />
                                <Condition Binding="{Binding IsSelected}" Value="True" />								             		
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.EnterActions>								
                                <BeginStoryboard>
                                    <Storyboard>                                		
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="imgLock">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1.2" Value="1"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1.5" Value="0" />												
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" Storyboard.TargetName="imgLock">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="4"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="1.2"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" Storyboard.TargetName="imgLock">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="4"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="1.2"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.EnterActions>          	
                        </MultiDataTrigger>						
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsAutoInvokeSkill}" Value="true" />
                                <Condition Binding="{Binding IsSelected}" Value="False" />								             		
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="imgUnlock">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.7" Value="1"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>									
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" Storyboard.TargetName="imgUnlock">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0" Value="1"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1" Value="4"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" Storyboard.TargetName="imgUnlock">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0" Value="1"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1" Value="4"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.EnterActions>          	
                        </MultiDataTrigger>
                        <DataTrigger Binding="{Binding IsHighlighted}" Value="True">
                            <DataTrigger.ExitActions>
                                <StopStoryboard BeginStoryboardName="SpinBorder_BeginStoryboard"/>
                            </DataTrigger.ExitActions>  
                            <DataTrigger.EnterActions>
                                <BeginStoryboard x:Name="SpinBorder_BeginStoryboard">
                                    <Storyboard RepeatBehavior="Forever" FillBehavior="Stop">
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="border0">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{x:Static Visibility.Hidden}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="border1">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{x:Static Visibility.Visible}"/>
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static Visibility.Hidden}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="border2">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static Visibility.Visible}"/>
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Hidden}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="border3">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Visible}"/>
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.4" Value="{x:Static Visibility.Hidden}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="border4">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.4" Value="{x:Static Visibility.Visible}"/>
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.5" Value="{x:Static Visibility.Hidden}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="border5">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.5" Value="{x:Static Visibility.Visible}"/>
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.6" Value="{x:Static Visibility.Hidden}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="border6">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.6" Value="{x:Static Visibility.Visible}"/>
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.7" Value="{x:Static Visibility.Hidden}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="border0">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.6" Value="{x:Static Visibility.Hidden}"/>
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.7" Value="{x:Static Visibility.Visible}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <DataTemplate x:Key="SkillButtonTemplate" DataType="{x:Type local:SkillCommand}">
        <ToggleButton Style="{StaticResource SkillButtonStyle}" IsEnabled="{Binding IsEnabled}" IsChecked="{Binding IsSelected}" ToolTipService.ShowOnDisabled="True">
            <ToggleButton.ToolTip>
                <ToolTip ContentTemplate="{StaticResource SkillToolTipTemplate}" Content="{Binding Mode=OneWay}" />
            </ToggleButton.ToolTip>
            <Grid>
                <local:OutlinedTextBlock TextWrapping="NoWrap" Fill="Black" Stroke="Black" StrokeThickness="3" FontWeight="Bold" Text="{res:ResourceKeyBinding Path=SkillName, StringFormat=Skill.\{0\}.Name}" FontFamily="/Resources;component/Fonts/#KaiTi" FontSize="14" VerticalAlignment="Center" TextAlignment="Justify">
                    <local:OutlinedTextBlock.Effect>
                        <BlurEffect />
                    </local:OutlinedTextBlock.Effect>
                </local:OutlinedTextBlock>
                <local:OutlinedTextBlock TextWrapping="NoWrap" Fill="White" Stroke="White" StrokeThickness="1" FontWeight="Bold" Text="{res:ResourceKeyBinding Path=SkillName, StringFormat=Skill.\{0\}.Name}" FontFamily="/Resources;component/Fonts/#KaiTi" FontSize="14" VerticalAlignment="Center" TextAlignment="Justify"/>
            </Grid>
        </ToggleButton>
    </DataTemplate>
    <DataTemplate x:Key="RulerGivenSkillButtonTemplate" DataType="{x:Type local:SkillCommand}">    	
     	<ToggleButton Width="67" Height="26" VerticalAlignment="Bottom" Style="{StaticResource SkillButtonStyle}" IsEnabled="{Binding IsEnabled}" IsChecked="{Binding IsSelected}" ToolTipService.ShowOnDisabled="True">
                <ToggleButton.ToolTip>
                    <ToolTip ContentTemplate="{StaticResource SkillToolTipTemplate}" Content="{Binding Mode=OneWay}" />
                </ToggleButton.ToolTip>
                <Grid>
                <local:OutlinedTextBlock TextWrapping="NoWrap" Fill="Black" Stroke="Black" StrokeThickness="3" FontWeight="Bold" Text="{res:ResourceKeyBinding Path=SkillName, StringFormat=Skill.\{0\}.Name}" FontFamily="/Resources;component/Fonts/#KaiTi" FontSize="14" VerticalAlignment="Center" TextAlignment="Justify">
                        <local:OutlinedTextBlock.Effect>
                            <BlurEffect />
                        </local:OutlinedTextBlock.Effect>
                    </local:OutlinedTextBlock>
                <local:OutlinedTextBlock TextWrapping="NoWrap" Fill="White" Stroke="White" StrokeThickness="1" FontWeight="Bold" Text="{res:ResourceKeyBinding Path=SkillName, StringFormat=Skill.\{0\}.Name}" FontFamily="/Resources;component/Fonts/#KaiTi" FontSize="14" VerticalAlignment="Center" TextAlignment="Justify"/>
                </Grid>
        </ToggleButton>
    </DataTemplate>
</ResourceDictionary>
