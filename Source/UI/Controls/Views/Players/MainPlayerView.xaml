<local:PlayerViewBase
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:ee="http://schemas.microsoft.com/expression/2010/effects"
             xmlns:local="clr-namespace:Sanguosha.UI.Controls"
             xmlns:res="clr-namespace:Sanguosha.UI.Resources;assembly=Resources"
             xmlns:anim="clr-namespace:Sanguosha.UI.Animations;assembly=Animations"
             xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions" xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" 
             xmlns:Sanguosha_UI_Effects="clr-namespace:Sanguosha.UI.Effects;assembly=Effects" xmlns:System="clr-namespace:System;assembly=mscorlib" 
             x:Class="Sanguosha.UI.Controls.MainPlayerView"
             mc:Ignorable="d"
             Height="170"
             d:DesignWidth="900">
    <local:PlayerViewBase.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../../Common.xaml"/>
                <ResourceDictionary Source="../Buttons/CardButton.xaml"/>
                <ResourceDictionary Source="../Skills/SkillToolTip.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/Resources;component/System.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <Storyboard x:Key="sbPhaseChange">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="imgPhase">
                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <CubicEase EasingMode="EaseOut"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="imgPhase">
                    <EasingThicknessKeyFrame KeyTime="0" Value="0,0,0,0"/>
                    <EasingThicknessKeyFrame KeyTime="0:0:0.5" Value="50,0,0,0">
                        <EasingThicknessKeyFrame.EasingFunction>
                            <CubicEase EasingMode="EaseOut"/>
                        </EasingThicknessKeyFrame.EasingFunction>
                    </EasingThicknessKeyFrame>
                </ThicknessAnimationUsingKeyFrames>
            </Storyboard>
            <local:SkillButtonTemplateSelector x:Key="skillButtonTemplateSelector" />
            <Style x:Key="OkButtonStyle" TargetType="{x:Type Button}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal">
                                            <Storyboard/>
                                        </VisualState>
                                        <VisualState x:Name="MouseOver">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="up">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="hover">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Pressed">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="down">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Disabled">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="disabled">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Rectangle x:Name="up" RenderTransformOrigin="0.5,0.5">
                                    <Rectangle.Fill>
                                        <ImageBrush ImageSource="{DynamicResource MainPlayerInfoView.Button.Ok.Up}"/>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                <Rectangle x:Name="down" RenderTransformOrigin="0.5,0.5" Visibility="Hidden">
                                    <Rectangle.Fill>
                                        <ImageBrush ImageSource="{DynamicResource MainPlayerInfoView.Button.Ok.Down}"/>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <Rectangle x:Name="hover" RenderTransformOrigin="0.5,0.5" Visibility="Hidden">
                                    <Rectangle.Fill>
                                        <ImageBrush ImageSource="{DynamicResource MainPlayerInfoView.Button.Ok.Hover}"/>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <Rectangle x:Name="disabled" RenderTransformOrigin="0.5,0.5" Visibility="Hidden">
                                    <Rectangle.Fill>
                                        <ImageBrush ImageSource="{DynamicResource MainPlayerInfoView.Button.Ok.Disabled}"/>
                                    </Rectangle.Fill>
                                </Rectangle>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsFocused" Value="True"/>
                                <Trigger Property="IsDefaulted" Value="True"/>
                                <Trigger Property="IsMouseOver" Value="True"/>
                                <Trigger Property="IsPressed" Value="True"/>
                                <Trigger Property="IsEnabled" Value="False"/>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="CancelButtonStyle" TargetType="{x:Type Button}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal">
                                            <Storyboard/>
                                        </VisualState>
                                        <VisualState x:Name="MouseOver">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="up">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="hover">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Pressed">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="down">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Disabled">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="disabled">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Rectangle x:Name="up" RenderTransformOrigin="0.5,0.5">
                                    <Rectangle.Fill>
                                        <ImageBrush ImageSource="{DynamicResource MainPlayerInfoView.Button.Cancel.Up}"/>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                <Rectangle x:Name="down" RenderTransformOrigin="0.5,0.5" Visibility="Hidden">
                                    <Rectangle.Fill>
                                        <ImageBrush ImageSource="{DynamicResource MainPlayerInfoView.Button.Cancel.Down}"/>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <Rectangle x:Name="hover" RenderTransformOrigin="0.5,0.5" Visibility="Hidden">
                                    <Rectangle.Fill>
                                        <ImageBrush ImageSource="{DynamicResource MainPlayerInfoView.Button.Cancel.Hover}"/>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <Rectangle x:Name="disabled" RenderTransformOrigin="0.5,0.5" Visibility="Hidden">
                                    <Rectangle.Fill>
                                        <ImageBrush ImageSource="{DynamicResource MainPlayerInfoView.Button.Cancel.Disabled}"/>
                                    </Rectangle.Fill>
                                </Rectangle>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsFocused" Value="True"/>
                                <Trigger Property="IsDefaulted" Value="True"/>
                                <Trigger Property="IsMouseOver" Value="True"/>
                                <Trigger Property="IsPressed" Value="True"/>
                                <Trigger Property="IsEnabled" Value="False"/>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="DiscardButtonStyle" TargetType="{x:Type Button}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal" />
                                        <VisualState x:Name="MouseOver" />
                                        <VisualState x:Name="Pressed" />
                                        <VisualState x:Name="Disabled" />
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Rectangle x:Name="up" RenderTransformOrigin="0.5,0.5">
                                    <Rectangle.Fill>
                                        <ImageBrush ImageSource="{DynamicResource MainPlayerInfoView.Button.Discard.Up}"/>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                <Rectangle x:Name="down" RenderTransformOrigin="0.5,0.5" Visibility="Hidden">
                                    <Rectangle.Fill>
                                        <ImageBrush ImageSource="{DynamicResource MainPlayerInfoView.Button.Discard.Down}"/>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <Rectangle x:Name="hover" RenderTransformOrigin="0.5,0.5" Visibility="Hidden">
                                    <Rectangle.Fill>
                                        <ImageBrush ImageSource="{DynamicResource MainPlayerInfoView.Button.Discard.Hover}"/>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <Rectangle x:Name="disabled" RenderTransformOrigin="0.5,0.5" Visibility="Hidden">
                                    <Rectangle.Fill>
                                        <ImageBrush ImageSource="{DynamicResource MainPlayerInfoView.Button.Discard.Disabled}"/>
                                    </Rectangle.Fill>
                                </Rectangle>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsFocused" Value="True"/>
                                <Trigger Property="IsDefaulted" Value="True"/>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="hover" Property="Visibility" Value="Visible" />
                                    <Setter TargetName="up" Property="Visibility" Value="Hidden" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="down" Property="Visibility" Value="Visible" />
                                    <Setter TargetName="up" Property="Visibility" Value="Hidden" />
                                    <Setter TargetName="hover" Property="Visibility" Value="Hidden" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="disabled" Property="Visibility" Value="Visible" />
                                    <Setter TargetName="up" Property="Visibility" Value="Hidden" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Storyboard x:Key="Countdown"/>
            <Storyboard x:Key="sbStartImpersonate" RepeatBehavior="Forever" AutoReverse="True">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(Sanguosha_UI_Effects:RippleTransitionEffect.Progress)" Storyboard.TargetName="heroPhoto">
                    <EasingDoubleKeyFrame KeyTime="0" Value="100"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:5" Value="0"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:6" Value="100"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="sbStartImpersonate2" RepeatBehavior="Forever" AutoReverse="True">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(Sanguosha_UI_Effects:RippleTransitionEffect.Progress)" Storyboard.TargetName="heroPhoto2">
                    <EasingDoubleKeyFrame KeyTime="0" Value="100"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:5" Value="0"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:6" Value="100"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="sbDeathTransition">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(Sanguosha_UI_Effects:MonochromeEffect.Strength)" Storyboard.TargetName="playerInfoArea">
                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:1" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="image">
                    <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="3"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:1" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="image">
                    <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="3"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:1" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="image">
                    <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:1" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
        </ResourceDictionary>
    </local:PlayerViewBase.Resources>
    <Grid>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="FadeStates">
                <VisualState x:Name="Faded">
                    <Storyboard>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="fadeMask">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="fadeMask2">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="UnFaded">
                    <Storyboard>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="fadeMask">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="fadeMask2">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <Grid.RowDefinitions>
            <RowDefinition Height="22"/>
            <RowDefinition Height="148" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto" />
            <ColumnDefinition />
            <ColumnDefinition Width="auto" />
        </Grid.ColumnDefinitions>
        <VisualStateManager.CustomVisualStateManager>
            <ei:ExtendedVisualStateManager/>
        </VisualStateManager.CustomVisualStateManager>
        <Image x:Name="imgPhase" 
               Visibility="{Binding IsCurrentPlayer, Converter={StaticResource boolToVisibilityConverter}}"
               Source="{res:ResourceKeyBinding Path=CurrentPhase, StringFormat=Phases.\{0\}.Large}"
               HorizontalAlignment="Left" VerticalAlignment="Bottom"
               Width="149" Height="15" Margin="50,0,0,0" />
        <Image Grid.Row="1" Width="305" Source="{DynamicResource MainPlayerInfoView.Background.Left}"/>
        <Image Grid.Row="1" Grid.Column="1"  Source="{DynamicResource MainPlayerInfoView.Background.Middle}" Stretch="Fill" />
        <Grid Grid.Row="1" Grid.ColumnSpan="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="1*" />
            </Grid.ColumnDefinitions>
            <Grid x:Name="equipmentArea" Grid.Row="1" Width="173" Visibility="Collapsed">
                <Grid x:Name="weaponArea" Margin="2,8,2,0" Height="37" Width="161"  VerticalAlignment="Top" d:LayoutOverrides="VerticalAlignment" />
                <Grid x:Name="armorArea" Margin="2,39,2,0" Height="37" Width="161"  VerticalAlignment="Top" />
                <Grid x:Name="horse1Area" Margin="2,72,2,0" Height="37" Width="161"  VerticalAlignment="Top" />
                <Grid x:Name="horse2Area" Margin="2,104,2,0" Height="37" Width="161"  VerticalAlignment="Top" />
            </Grid>
            <local:SingleRowCardStack x:Name="handCardArea" Grid.Column="1"  VerticalAlignment="Bottom" Margin="0,0,100,8" Height="132" MaxCardSpacing="97" MaxCardSpacingOnHighlighted="97" CardAlignment="Center" />
        </Grid>
        <Grid Grid.Row="1" Grid.Column="1">
            <Button x:Name="btnOk" Command="{Binding SubmitAnswerCommand}" Height="70" Style="{DynamicResource OkButtonStyle}" VerticalAlignment="Top" HorizontalAlignment="Right" Width="70" Margin="0,2,24,0"/>
            <Button Height="69" Margin="0,0,24,2" Command="{Binding CancelAnswerCommand}" Style="{DynamicResource CancelButtonStyle}" VerticalAlignment="Bottom" HorizontalAlignment="Right" Width="70"/>
            <Button Command="{Binding AbortAnswerCommand}" Style="{DynamicResource DiscardButtonStyle}" Height="75" Margin="0,36.665,-1,36.334" HorizontalAlignment="Right" Width="35"/>
            <Image Source="{DynamicResource MainPlayerInfoView.Background.Platter}" IsHitTestVisible="False" Grid.Column="1" HorizontalAlignment="Right" Margin="0,0,-13,0"/>
            <Border HorizontalAlignment="Right" Height="17" Width="16" VerticalAlignment="Bottom" Background="#FFF4E5B5" BorderThickness="1" BorderBrush="#FF332D22" Margin="0,0,77.996,2.168" d:LayoutOverrides="GridBox">
                <TextBlock Margin="0,0,0,0" TextWrapping="Wrap" Text="{Binding HandCardCount}" TextAlignment="Center" FontFamily="Arial" Foreground="Black"/>
            </Border>
            <Grid HorizontalAlignment="Right" VerticalAlignment="Bottom" Width="31" Height="31" Margin="0,0,-0.837,1.5">
                <local:ImageButton x:Name="trustButton"
                               NormalImage="pack://application:,,,/Resources;component/Images/Buttons/trust/normal1.png"
                               HoverImage="pack://application:,,,/Resources;component/Images/Buttons/trust/hover1.png"
                               PressedImage="pack://application:,,,/Resources;component/Images/Buttons/trust/down1.png"
                               DisabledImage="pack://application:,,,/Resources;component/Images/Buttons/trust/disabled1.png" Click="trustButton_Click"/>

                <local:ImageButton x:Name="untrustButton"
                               NormalImage="pack://application:,,,/Resources;component/Images/Buttons/trust/normal2.png"
                               HoverImage="pack://application:,,,/Resources;component/Images/Buttons/trust/hover2.png"
                               PressedImage="pack://application:,,,/Resources;component/Images/Buttons/trust/down2.png"
                               DisabledImage="pack://application:,,,/Resources;component/Images/Buttons/trust/disabled2.png"
                               Visibility="Hidden" Click="untrustButton_Click" />
            </Grid>
            <Image x:Name="image" Source="{res:ImageBinding Path=Role, ResourceKeyFormat=Death.Role.\{0\}.Image, StringFormat=Resources/Images/Death/\{0\}.png}" Stretch="None" HorizontalAlignment="Center" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5" IsHitTestVisible="False" Opacity="0" Margin="-154,0,95,0">
                <Image.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Image.RenderTransform>
            </Image>

        </Grid>
        <local:SingleRowCardStack x:Name="privateCardArea" IsCardConsumer="True" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,-140,0,8" Grid.ColumnSpan="2" Height="132" Width="200"  MaxCardSpacing="97" MaxCardSpacingOnHighlighted="97" CardAlignment="Center" />
        <StackPanel x:Name="playerInfoArea" Orientation="Horizontal" Grid.Row="1" Grid.Column="2">
            <StackPanel.Background>
                <ImageBrush ImageSource="{StaticResource MainPlayerInfoView.Background.Black}" Stretch="UniformToFill"/>
            </StackPanel.Background>
            <StackPanel.Effect>
                <Sanguosha_UI_Effects:MonochromeEffect Strength="0"/>
            </StackPanel.Effect>

            <Grid x:Name="hero1Area" Margin="0.5,2,0,0" HorizontalAlignment="Left" Width="122">
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition Height="auto" MinHeight="26" />
                </Grid.RowDefinitions>
                <Grid Grid.RowSpan="2" Height="122" VerticalAlignment="Top">
                    <Image x:Name="heroPhoto" Stretch="UniformToFill" HorizontalAlignment="Center" VerticalAlignment="Top" Source="{res:ImageBinding CropRect=71\,28\,145\,145, Path=Hero1Model.Name, ResourceKeyFormat=Hero.\{0\}.Image, StringFormat=Resources/Images/Heroes/Full/\{0\}.png}" MouseLeftButtonDown="HeroPhoto_MouseLeftButtonDown" MouseRightButtonDown="HeroPhoto_MouseRightButtonDown">
                        <Image.ToolTip>
                            <ToolTip x:Name="heroTip" Content="{Binding Hero1Model}" ContentTemplate="{DynamicResource HeroToolTipTemplate}"/>
                        </Image.ToolTip>
                        <Image.Effect>
                            <Sanguosha_UI_Effects:RippleTransitionEffect x:Name="impersonateEffect" Progress="100"/>
                        </Image.Effect>
                        <ToolTipService.ShowOnDisabled>True</ToolTipService.ShowOnDisabled>
                    </Image>
                    <Border x:Name="fadeMask" Background="#64000000" Opacity="0" IsHitTestVisible="False">
                        <i:Interaction.Behaviors>
                            <ei:DataStateBehavior TrueState="Faded" FalseState="UnFaded" Value="true" Binding="{Binding IsFaded}"/>
                        </i:Interaction.Behaviors>
                    </Border>
                    <Rectangle x:Name="drankMask" IsHitTestVisible="False" Visibility="{Binding IsDrank, Converter={StaticResource boolToVisibilityConverter}}" >
                        <Rectangle.Fill>
                            <RadialGradientBrush>
                                <GradientStop Color="#00FF0000" Offset="1"/>
                                <GradientStop Color="#4C640000" Offset="0.558"/>
                                <GradientStop Color="#4CFF0000"/>
                            </RadialGradientBrush>
                        </Rectangle.Fill>
                    </Rectangle>
                    <TextBlock Height="17" Margin="0,2" Text="{Binding Account.UserName, Mode=OneWay}" TextWrapping="Wrap" VerticalAlignment="Top" FontFamily="SimSun" Foreground="White" FontSize="13.333" TextAlignment="Center" LineStackingStrategy="BlockLineHeight" LineHeight="16" Background="#7F585858" IsHitTestVisible="False" />
                    <Image Source="/Resources;component/Images/MainPlayerInfoView/imprisoned.png" Stretch="Fill" Visibility="{Binding IsImprisoned, Converter={StaticResource boolToVisibilityConverter}}"/>
                    <Image x:Name="allegianceIcon" Source="{res:ResourceKeyBinding Path=Allegiance, StringFormat=Allegiance.\{0\}.Icon}" HorizontalAlignment="Left" VerticalAlignment="Top" Width="28" Height="29" Margin="7,7,0,0" IsHitTestVisible="False" />
                    <ItemsControl ItemsSource="{Binding Hero1Model.NameChars}"
                	HorizontalAlignment="Left"
                	Margin="11,36,0,48"
                	Width="20" IsHitTestVisible="False">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <UniformGrid Columns="1"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Viewbox Margin="0, -2, 0, -2" Stretch="Fill" StretchDirection="DownOnly">
                                    <local:OutlinedTextBlock TextWrapping="NoWrap"
                					Fill="White"
                					Stroke="Black"
                					StrokeThickness="1"
                					FontWeight="Bold"
                					Text="{Binding DataContext, RelativeSource={RelativeSource Self}}" 
                					FontFamily="/Resources;component/Fonts/#LiSu" FontSize="18.667" 
                					VerticalAlignment="Center" TextAlignment="Center"
                					TextTrimming="None"/>
                                </Viewbox>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                        <ItemsControl.Effect>
                            <DropShadowEffect Color="Black" BlurRadius="10" ShadowDepth="0"/>
                        </ItemsControl.Effect>
                    </ItemsControl>
                    <Image Height="30" Margin="8,26,27,0" Source="/Resources;component/Images/Game/saveMe.png" Stretch="Fill" VerticalAlignment="Top" Visibility="{Binding IsDying, Converter={StaticResource boolToVisibilityConverter}}"/>
                </Grid>
                <Border x:Name="IsTargetedGlow" Visibility="{Binding IsTargeted, Converter={StaticResource boolToVisibilityConverter}}" ClipToBounds="True" BorderBrush="Red" BorderThickness="5" >
                    <Border.Effect>
                        <BlurEffect Radius="10" />
                    </Border.Effect>
                </Border>
                <Border x:Name="IsSelectedGlow" Visibility="{Binding IsSelected, Converter={StaticResource boolToVisibilityConverter}}" ClipToBounds="True" BorderBrush="#FFFF6B00" BorderThickness="5" >
                    <Border.Effect>
                        <BlurEffect Radius="10" />
                    </Border.Effect>
                </Border>
                <Image Source="{DynamicResource MainPlayerInfoView.Background.Right}" VerticalAlignment="Top" IsHitTestVisible="False" Width="122" Height="122" Stretch="Fill" Grid.RowSpan="2"/>

                <ItemsControl ItemsSource="{Binding Path=PrivateDecks, Mode=OneWay}" Margin="25, 25, 0, 0">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel HorizontalAlignment="Left" />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Button Style="{DynamicResource DefaultButtonStyleBrown}" Click="btnPrivateDeck_Click" >
                                <TextBlock Foreground="#FFEEE4C1" FontFamily="SimSun" Margin="5, 1" Text="{Binding Path=DisplayText, Mode=OneWay}" />
                            </Button>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>

                <ItemsControl Grid.Row="1" x:Name="skillButtonDock" HorizontalAlignment="Left"
                    VerticalAlignment="Bottom" ItemsSource="{Binding Hero1Model.SkillCommands}"
                    ItemTemplateSelector="{StaticResource skillButtonTemplateSelector}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <local:SkillButtonDock  ButtonsPerRow="2"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                </ItemsControl>
                <Image Source="{res:ResourceKeyBinding Path=SelectedTimes, StringFormat=Selection.Digit.{0}}" 
                               VerticalAlignment="Center" HorizontalAlignment="Center"
                               Visibility="{Binding IsSelectionRepeatable, Converter={StaticResource boolToVisibilityConverter}}"
                               IsHitTestVisible="False" />

                <Grid Margin="-10,10,0,0" Height="22" VerticalAlignment="Top" Width="148" HorizontalAlignment="Left">
                    <Grid.ToolTip>
                        <ToolTip Content="{DynamicResource State.TieSuoLianHuan.Description}" ContentTemplate="{DynamicResource ToolTipTextTemplate}" />
                    </Grid.ToolTip>
                    <Image Source="/Resources;component/Images/Game/IronShackled.png" Stretch="Fill" Visibility="{Binding IsIronShackled, Converter={StaticResource boolToVisibilityConverter}}" />
                    <anim:TieSuoAnimation2 x:Name="tieSuoAnimation2" FramesPerSecond="15" Stretch="Fill"/>
                </Grid>
                <Canvas x:Name="animationCenter1" HorizontalAlignment="Left" Height="16" Margin="63,69,0,0" VerticalAlignment="Top" Width="18" IsHitTestVisible="False"/>
            </Grid>
            <Grid x:Name="hero2Area" Margin="0.5,2,0,0" HorizontalAlignment="Left" Width="122" Visibility="{Binding Hero2, Converter={StaticResource objectToVisibilityConverter}}">
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition Height="auto" MinHeight="26" />
                </Grid.RowDefinitions>
                <Grid Grid.RowSpan="2" Height="122" VerticalAlignment="Top">
                    <Image x:Name="heroPhoto2" DataContext="{Binding Hero2Model}" Stretch="UniformToFill" HorizontalAlignment="Center" VerticalAlignment="Top" Source="{res:ImageBinding CropRect=71\,28\,145\,145, Path=Name, ResourceKeyFormat=Hero.{0}.Image, StringFormat=Resources/Images/Heroes/Full/{0}.png}" MouseLeftButtonDown="HeroPhoto_MouseLeftButtonDown" MouseRightButtonDown="HeroPhoto_MouseRightButtonDown">
                        <Image.ToolTip>
                            <ToolTip x:Name="hero2Tip" Content="{Binding}" ContentTemplate="{DynamicResource HeroToolTipTemplate}"/>
                        </Image.ToolTip>
                        <Image.Effect>
                            <Sanguosha_UI_Effects:RippleTransitionEffect x:Name="impersonateEffect1" Progress="100"/>
                        </Image.Effect>
                        <ToolTipService.ShowOnDisabled>
                            <System:Boolean>True</System:Boolean>
                        </ToolTipService.ShowOnDisabled>
                    </Image>
                    <Border x:Name="fadeMask2" Background="#64000000" Opacity="0" IsHitTestVisible="False" />
                    <Rectangle x:Name="drankMask2" IsHitTestVisible="False" Visibility="{Binding IsDrank, Converter={StaticResource boolToVisibilityConverter}}" >
                        <Rectangle.Fill>
                            <RadialGradientBrush>
                                <GradientStop Color="#00FF0000" Offset="1"/>
                                <GradientStop Color="#4C640000" Offset="0.558"/>
                                <GradientStop Color="#4CFF0000"/>
                            </RadialGradientBrush>
                        </Rectangle.Fill>
                    </Rectangle>
                    <Image Source="/Resources;component/Images/MainPlayerInfoView/imprisoned.png" Stretch="Fill" Visibility="{Binding IsImprisoned, Converter={StaticResource boolToVisibilityConverter}}"/>
                    <Image x:Name="allegianceIcon2" Source="{res:ResourceKeyBinding Path=Hero2Model.Allegiance, StringFormat=Allegiance.\{0\}.Icon}" HorizontalAlignment="Left" VerticalAlignment="Top" Width="28" Height="29" Margin="7,7,0,0" IsHitTestVisible="False" />
                    <ItemsControl ItemsSource="{Binding Hero2Model.NameChars}"
                			HorizontalAlignment="Left"
                			Margin="11,36,0,48"
                			Width="20" IsHitTestVisible="False">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <UniformGrid Columns="1"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Viewbox Margin="0, -2, 0, -2" Stretch="Fill" StretchDirection="DownOnly">
                                    <local:OutlinedTextBlock TextWrapping="NoWrap"
                							Fill="White"
                							Stroke="Black"
                							StrokeThickness="1"
                							FontWeight="Bold"
                							Text="{Binding DataContext, RelativeSource={RelativeSource Self}}" 
                							FontFamily="/Resources;component/Fonts/#LiSu" FontSize="18.667" 
                							VerticalAlignment="Center" TextAlignment="Center"
                							TextTrimming="None"/>
                                </Viewbox>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                        <ItemsControl.Effect>
                            <DropShadowEffect Color="Black" BlurRadius="10" ShadowDepth="0"/>
                        </ItemsControl.Effect>
                    </ItemsControl>
                    <Image Height="30" Margin="8,26,27,0" Source="/Resources;component/Images/Game/saveMe.png" Stretch="Fill" VerticalAlignment="Top" Visibility="{Binding IsDying, Converter={StaticResource boolToVisibilityConverter}}"/>
                </Grid>
                <Border x:Name="IsTargetedGlow2" Visibility="{Binding IsTargeted, Converter={StaticResource boolToVisibilityConverter}}" ClipToBounds="True" BorderBrush="Red" BorderThickness="5" >
                    <Border.Effect>
                        <BlurEffect Radius="10" />
                    </Border.Effect>
                </Border>
                <Border x:Name="IsSelectedGlow2" Visibility="{Binding IsSelected, Converter={StaticResource boolToVisibilityConverter}}" ClipToBounds="True" BorderBrush="#FFFF6B00" BorderThickness="5" >
                    <Border.Effect>
                        <BlurEffect Radius="10" />
                    </Border.Effect>
                </Border>
                <Image Source="{DynamicResource MainPlayerInfoView.Background.Right}" VerticalAlignment="Top" IsHitTestVisible="False" Width="122" Height="122" Stretch="Fill" Grid.RowSpan="2"/>

                <!--ItemsControl ItemsSource="{Binding PrivateDecks, Mode=OneWay}" Margin="25, 25, 0, 0">
                		<ItemsControl.ItemsPanel>
                			<ItemsPanelTemplate>
                				<WrapPanel HorizontalAlignment="Left" />
                			</ItemsPanelTemplate>
                		</ItemsControl.ItemsPanel>
                		<ItemsControl.ItemTemplate>
                			<DataTemplate>
                				<Button Style="{DynamicResource DefaultButtonStyleBrown}" Click="btnPrivateDeck_Click" >
                					<TextBlock Foreground="#FFEEE4C1" FontFamily="SimSun" Margin="5, 1" Text="{Binding DisplayText, Mode=OneWay}" />											
                				</Button>
                			</DataTemplate>	
                		</ItemsControl.ItemTemplate>
                	</ItemsControl-->

                <ItemsControl Grid.Row="1" x:Name="skillButtonDock2" HorizontalAlignment="Left"
                		VerticalAlignment="Bottom" ItemsSource="{Binding Hero2Model.SkillCommands}"
                		ItemTemplateSelector="{StaticResource skillButtonTemplateSelector}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <local:SkillButtonDock  ButtonsPerRow="2"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                </ItemsControl>
                <Image Source="{res:ResourceKeyBinding Path=SelectedTimes, StringFormat=Selection.Digit.\{0\}}" 
                		VerticalAlignment="Center" HorizontalAlignment="Center"
                		Visibility="{Binding IsSelectionRepeatable, Converter={StaticResource boolToVisibilityConverter}}"
                		IsHitTestVisible="False" />

                <Grid Margin="-10,10,0,0" Height="22" VerticalAlignment="Top" Width="148" HorizontalAlignment="Left">
                    <Grid.ToolTip>
                        <ToolTip Content="{DynamicResource State.TieSuoLianHuan.Description}" ContentTemplate="{DynamicResource ToolTipTextTemplate}" />
                    </Grid.ToolTip>
                    <Image Source="/Resources;component/Images/Game/IronShackled.png" Stretch="Fill" Visibility="{Binding IsIronShackled, Converter={StaticResource boolToVisibilityConverter}}" />
                    <!--anim:TieSuoAnimation2 x:Name="tieSuoAnimation1" FramesPerSecond="15" Stretch="Fill"/-->
                </Grid>
            </Grid>
            <local:VHealthBar x:Name="healthBar" HorizontalAlignment="Right" Width="25" Health="{Binding Health}" MaxHealth="{Binding MaxHealth}" IsHitTestVisible="False" Margin="0,4,0,10" />
        </StackPanel>
        <StackPanel Grid.Row="2" Height="29" Orientation="Horizontal" HorizontalAlignment="Left" Margin="200,-20,0,0" x:Name="delayedToolsDock" VerticalAlignment="Top" Grid.ColumnSpan="2" >
            <i:Interaction.Behaviors>
                <ei:FluidMoveBehavior AppliesTo="Children" Duration="0:0:5">
                    <ei:FluidMoveBehavior.EaseX>
                        <BackEase EasingMode="EaseOut"/>
                    </ei:FluidMoveBehavior.EaseX>
                </ei:FluidMoveBehavior>
            </i:Interaction.Behaviors>
        </StackPanel>
        <local:RoleBox x:Name="cbRoleBox" Grid.Column="1" Grid.Row="1"  HorizontalAlignment="Right" Width="25" Margin="0,4.333,2.003,0" Height="26" VerticalAlignment="Top" />
        <anim:TieSuoAnimation x:Name="tieSuoAnimation" VerticalAlignment="Top" HorizontalAlignment="Center" Grid.ColumnSpan="2" Margin="0,-40,0,0" IsHitTestVisible="False" FramesPerSecond="15" Height="180" Width="202"/>
    </Grid>
</local:PlayerViewBase>
