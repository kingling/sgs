<local:PlayerViewBase
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:ee="http://schemas.microsoft.com/expression/2010/effects"
    xmlns:local="clr-namespace:Sanguosha.UI.Controls"
    xmlns:res="clr-namespace:Sanguosha.UI.Resources;assembly=Resources"
    xmlns:anim="clr-namespace:Sanguosha.UI.Animations;assembly=Animations"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
    xmlns:System="clr-namespace:System;assembly=mscorlib" xmlns:Sanguosha_UI_Effects="clr-namespace:Sanguosha.UI.Effects;assembly=Effects"
    x:Class="Sanguosha.UI.Controls.PlayerView"
    mc:Ignorable="d"
    MaxWidth="180" MaxHeight="210"
    MinWidth="138" MinHeight="174"
    d:DesignHeight="210" d:DesignWidth="180">
    <local:PlayerViewBase.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="MarkView.xaml"/>
                <ResourceDictionary Source="../Buttons/CardButton.xaml"/>
                <ResourceDictionary Source="../Skills/SkillButton.xaml"/>
                <ResourceDictionary Source="../Skills/SkillToolTip.xaml"/>
                <ResourceDictionary Source="../../Common.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/Resources;component/System.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/Resources;component/Images/CardImages.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <DrawingBrush x:Key="GlowOpacityMask">
                <DrawingBrush.Drawing>
                    <GeometryDrawing>
                        <GeometryDrawing.Pen>
                            <Pen Thickness="1">
                                <Pen.Brush>
                                    <SolidColorBrush Color="Black"/>
                                </Pen.Brush>
                            </Pen>
                        </GeometryDrawing.Pen>
                        <GeometryDrawing.Geometry>
                            <RectangleGeometry Rect="0,0,25,25"/>
                        </GeometryDrawing.Geometry>
                    </GeometryDrawing>
                </DrawingBrush.Drawing>
            </DrawingBrush>
            <Style x:Key="SmallTextBlockStyle" TargetType="{x:Type TextBlock}">
                <Setter Property="TextWrapping" Value="NoWrap"/>
                <Setter Property="TextTrimming" Value="None"/>
                <Setter Property="FontFamily" Value="SimSun" />
                <Setter Property="FontSize" Value="10" />
                <Setter Property="FontWeight" Value="Bold" />
                <Setter Property="Foreground">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="White" Offset="0"/>
                            <GradientStop Color="#FFB7B6B6" Offset="1"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </Style>
            <Storyboard x:Key="sbPhaseChange">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="imgPhase">
                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <CubicEase EasingMode="EaseOut"/>
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
                <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="imgPhase">
                    <EasingThicknessKeyFrame KeyTime="0" Value="0,0,75,0"/>
                    <EasingThicknessKeyFrame KeyTime="0:0:0.5" Value="0">
                        <EasingThicknessKeyFrame.EasingFunction>
                            <CubicEase EasingMode="EaseOut"/>
                        </EasingThicknessKeyFrame.EasingFunction>
                    </EasingThicknessKeyFrame>
                </ThicknessAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="sbTremble">
                <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="grid">
                    <EasingThicknessKeyFrame KeyTime="0" Value="0"/>
                    <EasingThicknessKeyFrame KeyTime="0:0:0.05" Value="-3,0,3,0">
                        <EasingThicknessKeyFrame.EasingFunction>
                            <BackEase EasingMode="EaseOut"/>
                        </EasingThicknessKeyFrame.EasingFunction>
                    </EasingThicknessKeyFrame>
                    <EasingThicknessKeyFrame KeyTime="0:0:0.2" Value="10,0,-10,0">
                        <EasingThicknessKeyFrame.EasingFunction>
                            <BackEase EasingMode="EaseOut"/>
                        </EasingThicknessKeyFrame.EasingFunction>
                    </EasingThicknessKeyFrame>
                    <EasingThicknessKeyFrame KeyTime="0:0:0.3" Value="0">
                        <EasingThicknessKeyFrame.EasingFunction>
                            <BackEase EasingMode="EaseOut"/>
                        </EasingThicknessKeyFrame.EasingFunction>
                    </EasingThicknessKeyFrame>
                </ThicknessAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="sbDeathTransition">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(Sanguosha_UI_Effects:MonochromeEffect.Strength)" Storyboard.TargetName="grid">
                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:1" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="deathIcon">
                    <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="3"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:1" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="deathIcon">
                    <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="3"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:1" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="deathIcon">
                    <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:1" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Style x:Key="SpectateButton" TargetType="{x:Type Button}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal"/>
                                        <VisualState x:Name="MouseOver">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="image">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="image1">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Pressed">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="image2">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="image1">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Disabled">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="image3">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="image1">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Image x:Name="image1" Source="/Resources;component/Images/Buttons/spectate/normal.png" Stretch="Fill"/>
                                <Image x:Name="image" Source="/Resources;component/Images/Buttons/spectate/hover.png" Stretch="Fill" Visibility="Hidden"/>
                                <Image x:Name="image2" Source="/Resources;component/Images/Buttons/spectate/down.png" Stretch="Fill" Visibility="Hidden"/>
                                <Image x:Name="image3" Source="/Resources;component/Images/Buttons/spectate/disabled.png" Stretch="Fill" Visibility="Hidden"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsFocused" Value="True"/>
                                <Trigger Property="IsDefaulted" Value="True"/>
                                <Trigger Property="IsMouseOver" Value="True"/>
                                <Trigger Property="IsPressed" Value="True"/>
                                <Trigger Property="IsEnabled" Value="False"/>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Storyboard x:Key="sbStartImpersonate" RepeatBehavior="Forever" AutoReverse="True">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(Sanguosha_UI_Effects:RippleTransitionEffect.Progress)" Storyboard.TargetName="heroPhoto">
                    <EasingDoubleKeyFrame KeyTime="0" Value="100"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:5" Value="0"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:6" Value="100"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="sbStartImpersonate1" RepeatBehavior="Forever" AutoReverse="True">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(Sanguosha_UI_Effects:RippleTransitionEffect.Progress)" Storyboard.TargetName="heroPhoto1">
                    <EasingDoubleKeyFrame KeyTime="0" Value="100"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:5" Value="0"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:6" Value="100"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="sbStartImpersonate2" RepeatBehavior="Forever" AutoReverse="True">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(Sanguosha_UI_Effects:RippleTransitionEffect.Progress)" Storyboard.TargetName="heroPhoto2">
                    <EasingDoubleKeyFrame KeyTime="0" Value="100"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:5" Value="0"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:6" Value="100"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="ShowSpectateButton">
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="btnSpectate">
                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                </ObjectAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="HideSpectateButton">
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="btnSpectate">
                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
                </ObjectAnimationUsingKeyFrames>
            </Storyboard>
        </ResourceDictionary>
    </local:PlayerViewBase.Resources>
    <local:PlayerViewBase.Triggers>
        <EventTrigger RoutedEvent="Mouse.MouseEnter">
            <BeginStoryboard x:Name="ShowSpectateButton_BeginStoryboard" Storyboard="{StaticResource ShowSpectateButton}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="Mouse.MouseLeave">
            <BeginStoryboard x:Name="HideSpectateButton_BeginStoryboard" Storyboard="{StaticResource HideSpectateButton}"/>
        </EventTrigger>
    </local:PlayerViewBase.Triggers>
    <Grid x:Name="LayoutRoot">
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition Width="20"/>
        </Grid.ColumnDefinitions>
        <ItemsControl ItemsSource="{Binding Marks}"                      
                      ItemTemplate="{StaticResource SmallMarkTemplate}" Margin="0,0,0,5"
                      Width="20" Grid.Column="1">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel FlowDirection="LeftToRight"/>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
        </ItemsControl>
        <Grid x:Name="LeftGrid" FlowDirection="LeftToRight">
            <VisualStateManager.CustomVisualStateManager>
                <ei:ExtendedVisualStateManager/>
            </VisualStateManager.CustomVisualStateManager>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="FadedStates" ei:ExtendedVisualStateManager.UseFluidLayout="True">
                    <VisualStateGroup.Transitions>
                        <VisualTransition GeneratedDuration="0:0:0.2"/>
                    </VisualStateGroup.Transitions>
                    <VisualState x:Name="Faded">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="fadeMask">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="bgFade">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="bg">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Unfaded">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="fadeMask">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="bgFade">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="bg">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition Height="12"/>
            </Grid.RowDefinitions>
            <ProgressBar x:Name="progressBar" Style="{StaticResource TimedProgressBarStyle}" Grid.Column="0" Grid.Row="2" Margin="5,0" />
            <Grid x:Name="grid" Grid.Column="0">
                <Grid.Effect>
                    <Sanguosha_UI_Effects:MonochromeEffect Strength="0"/>
                </Grid.Effect>
                <Border OpacityMask="{StaticResource GlowOpacityMask}" x:Name="isPlayingGlow" Visibility="{Binding IsCurrentPlayer, Converter={StaticResource boolToVisibilityConverter}}"  Background="#FF27D317">
                    <Border.Effect>
                        <BlurEffect Radius="10"/>
                    </Border.Effect>
                </Border>
                <Border OpacityMask="{StaticResource GlowOpacityMask}" x:Name="isSelectedGlow" Visibility="{Binding IsSelected, Converter={StaticResource boolToVisibilityConverter}}"  Background="#FFFF6B00">
                    <Border.Effect>
                        <BlurEffect Radius="10"/>
                    </Border.Effect>
                </Border>
                <Border OpacityMask="{StaticResource GlowOpacityMask}" x:Name="IsResponsingGlow" Visibility="{Binding IsResponsing, Converter={StaticResource boolToVisibilityConverter}}"  Background="Red">
                    <Border.Effect>
                        <BlurEffect Radius="10" />
                    </Border.Effect>
                </Border>
                <Grid x:Name="mainArea" Margin="7" Background="Transparent" MouseLeftButtonDown="mainArea_MouseLeftButtonDown" MouseRightButtonDown="mainArea_MouseRightButtonDown">
                    <ToolTipService.ShowOnDisabled>True</ToolTipService.ShowOnDisabled>
                    <Grid.CacheMode>
                        <BitmapCache EnableClearType="True" RenderAtScale="2" SnapsToDevicePixels="True" />
                    </Grid.CacheMode>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="27"/>
                        <RowDefinition/>
                        <RowDefinition Height="66"/>
                    </Grid.RowDefinitions>
                    <Image x:Name="bg" Margin="0,0,-2,0" Stretch="Fill" Grid.RowSpan="3" Source="{StaticResource PlayerInfoView.Background}" IsHitTestVisible="False" />
                    <Image x:Name="bgFade" Margin="0,0,-2,0" Stretch="Fill" Grid.RowSpan="3" Source="{StaticResource PlayerInfoView.Background.Faded}" Visibility="Hidden"  IsHitTestVisible="False" />
                    <local:CardStack x:Name="privateCardArea" IsCardConsumer="true" CardAlignment="Center" MaxCardSpacing="30" Grid.RowSpan="3" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="-30,0,0,0"  Height="130" Width="179" IsHitTestVisible="false" />
                    <local:CardStack x:Name="handCardArea" IsCardConsumer="true" CardAlignment="Center" MaxCardSpacing="30" Grid.RowSpan="3" HorizontalAlignment="Center" VerticalAlignment="Center" Height="130" Width="279" IsHitTestVisible="false" />
                    <Grid x:Name="heroArea" Margin="5,0,6,0" Grid.Row="1" IsHitTestVisible="True">
                        <Border CornerRadius="1" ClipToBounds="True" BorderThickness="1" IsHitTestVisible="False">
                            <Border.BorderBrush>
                                <LinearGradientBrush EndPoint="1,1.8" StartPoint="0,0">
                                    <GradientStop Color="#E5323232" Offset="0"/>
                                    <GradientStop Color="#E5323232" Offset="1"/>
                                    <GradientStop Color="#FFDEDEDE" Offset="0.439"/>
                                    <GradientStop Color="#E63C3C3C" Offset="0.26"/>
                                    <GradientStop Color="#E84A4A4A" Offset="0.618"/>
                                </LinearGradientBrush>
                            </Border.BorderBrush>
                        </Border>
                        <Grid Margin="1">
                            <Image x:Name="heroPhoto" Visibility="{Binding Hero2, Converter={StaticResource objectToInvisibilityConverter}}" Stretch="UniformToFill" HorizontalAlignment="Center" VerticalAlignment="Top" Source="{res:ImageBinding CropRect=28\,46\,220\,132, Path=Hero1Model.Name, ResourceKeyFormat=Hero.{0}.Image, StringFormat=Resources/Images/Heroes/Full/{0}.png}">
                                <Image.Effect>
                                    <Sanguosha_UI_Effects:RippleTransitionEffect x:Name="impersonateEffect" Progress="100"/>
                                </Image.Effect>
                                <Image.ToolTip>
                                    <ToolTip x:Name="heroTip" Content="{Binding Hero1Model}" ContentTemplate="{DynamicResource HeroToolTipTemplate}"/>
                                </Image.ToolTip>
                            </Image>
                            <Grid x:Name="gridDualHero" Visibility="{Binding Hero2, Converter={StaticResource objectToVisibilityConverter}}">
                                <Image x:Name="heroPhoto1" Grid.ColumnSpan="2" Stretch="UniformToFill" HorizontalAlignment="Left" VerticalAlignment="Top" Source="{res:ImageBinding CropRect=60\,30\,208\,125, Path=Hero1Model.Name, ResourceKeyFormat=Hero.{0}.Image, StringFormat=Resources/Images/Heroes/Full/{0}.png}">
                                    <Image.Effect>
                                        <Sanguosha_UI_Effects:RippleTransitionEffect x:Name="impersonateEffect1" Progress="100"/>
                                    </Image.Effect>
                                </Image>
                                <Grid Background="Transparent">
                                    <Grid.OpacityMask>
                                        <ImageBrush ImageSource="{StaticResource PlayerInfoView.SecondaryHeroMask}" Stretch="Fill" />
                                    </Grid.OpacityMask>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="0.6*"/>
                                        <ColumnDefinition Width="0.4*"/>
                                    </Grid.ColumnDefinitions>
                                    <Viewbox HorizontalAlignment="Right" Grid.Column="1" Stretch="UniformToFill">
                                        <Image x:Name="heroPhoto2" Source="{res:ImageBinding CropRect=63\,20\,126\,178, Path=Hero2Model.Name, ResourceKeyFormat=Hero.{0}.Image, StringFormat=Resources/Images/Heroes/Full/{0}.png}">
                                            <Image.Effect>
                                                <Sanguosha_UI_Effects:RippleTransitionEffect x:Name="impersonateEffect2" Progress="100"/>
                                            </Image.Effect>
                                        </Image>
                                        <Viewbox.ToolTip>
                                            <ToolTip x:Name="hero2Tip" Content="{Binding Hero2Model}" ContentTemplate="{DynamicResource HeroToolTipTemplate}"/>
                                        </Viewbox.ToolTip>
                                    </Viewbox>
                                    <Grid.ToolTip>
                                        <ToolTip x:Name="hero1Tip" Content="{Binding Hero1Model}" ContentTemplate="{DynamicResource HeroToolTipTemplate}"/>
                                    </Grid.ToolTip>
                                </Grid>
                                <Image Source="{StaticResource PlayerInfoView.HeroSeparator}" Stretch="Fill" IsHitTestVisible="False"/>
                            </Grid>
                            <Rectangle Visibility="{Binding IsDrank, Converter={StaticResource boolToVisibilityConverter}}" IsHitTestVisible="False" >
                                <Rectangle.Fill>
                                    <RadialGradientBrush>
                                        <GradientStop Color="#00FF0000" Offset="1"/>
                                        <GradientStop Color="#4C640000" Offset="0.558"/>
                                        <GradientStop Color="#4CFF0000"/>
                                    </RadialGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                            <Image Margin="0" IsHitTestVisible="False" Source="/Resources;component/Images/PlayerInfoView/imprisoned.png" Stretch="UniformToFill" HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="{Binding IsImprisoned, Converter={StaticResource boolToVisibilityConverter}}" />
                            <Border x:Name="IsTargetedGlow" IsHitTestVisible="False" Visibility="{Binding IsTargeted, Converter={StaticResource boolToVisibilityConverter}}" BorderBrush="Red" BorderThickness="5" >
                                <Border.Effect>
                                    <BlurEffect Radius="10" />
                                </Border.Effect>
                            </Border>
                            <Image Source="{res:ResourceKeyBinding Path=SelectedTimes, StringFormat=Selection.Digit.\{0\}}" 
                    		       VerticalAlignment="Center" HorizontalAlignment="Center"
                    		       Visibility="{Binding IsSelectionRepeatable, Converter={StaticResource boolToVisibilityConverter}}"
                    		       IsHitTestVisible="False" />
                            <StackPanel>
                                <ItemsControl ItemsSource="{Binding StatusMarks, Mode=OneWay}" Margin="22, 0, 0, 0">
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <WrapPanel HorizontalAlignment="Left" />
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <Border Visibility="{Binding IsExisted, Converter={StaticResource boolToVisibilityConverter}}" BorderThickness="2" BorderBrush="{res:ResourceKeyBinding Path=MarkName, StringFormat=Status.\{0\}.Brush}" >
                                                <Border.Effect>
                                                    <DropShadowEffect Color="Black" ShadowDepth="0" />
                                                </Border.Effect>
                                                <TextBlock FontFamily="SimHei" FontSize="12" Foreground="{res:ResourceKeyBinding Path=MarkName, StringFormat=Status.\{0\}.Brush}" Text="{res:ResourceKeyBinding Path=MarkName, StringFormat=Status.\{0\}.Name}" />
                                            </Border>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                                <ItemsControl ItemsSource="{Binding PrivateDecks, Mode=OneWay}" Margin="22, 0, 0, 0">
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <WrapPanel HorizontalAlignment="Left" />
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <Button Style="{DynamicResource DefaultButtonStyleBrown}" Click="btnPrivateDeck_Click" >
                                                <TextBlock Foreground="#FFEEE4C1" FontFamily="SimSun" Margin="5, 1" Text="{Binding DisplayText, Mode=OneWay}" />
                                            </Button>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </StackPanel>
                            <local:HealthBar x:Name="healthBar" HorizontalAlignment="Right" VerticalAlignment="Bottom"
                    		                 IsHitTestVisible="False" Height="14" Health="{Binding Health}" MaxHealth="{Binding MaxHealth}"/>
                            <Grid HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="15,0,0,0" Visibility="{Binding Hero1Model.ImpersonatedSkill, Converter={StaticResource objectToVisibilityConverter}}">
                                <Grid.Background>
                                    <ImageBrush ImageSource="{DynamicResource PlayerInfoView.AcquiredSkill.Background}"/>
                                </Grid.Background>
                                <Grid.ToolTip>
                                    <ToolTip Content="{Binding Hero1Model.ImpersonatedSkill}" ContentTemplate="{StaticResource SkillToolTipTemplate}" />
                                </Grid.ToolTip>
                                <local:OutlinedTextBlock Text="{res:ResourceKeyBinding Path=Hero1Model.ImpersonatedSkill, StringFormat=Skill.{0}.Name}" FontSize="21" Fill="White" FontFamily="/Resources;component/Fonts/#LiSu" Margin="5,1" Stroke="Blue" StrokeThickness="3"/>
                            </Grid>
                            <Grid HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,0,16" Visibility="{Binding Hero2Model.ImpersonatedSkill, Converter={StaticResource objectToVisibilityConverter}}">
                                <Grid.Background>
                                    <ImageBrush ImageSource="{DynamicResource PlayerInfoView.AcquiredSkill.Background}"/>
                                </Grid.Background>
                                <Grid.ToolTip>
                                    <ToolTip Content="{Binding Hero2Model.ImpersonatedSkill}" ContentTemplate="{StaticResource SkillToolTipTemplate}" />
                                </Grid.ToolTip>
                                <local:OutlinedTextBlock Text="{res:ResourceKeyBinding Path=Hero2Model.ImpersonatedSkill, StringFormat=Skill.{0}.Name}" FontSize="21" Fill="White" FontFamily="/Resources;component/Fonts/#LiSu" Margin="5,1" Stroke="Blue" StrokeThickness="3"/>
                            </Grid>
                            <Image Height="30" Margin="20,0,21,7" Source="/Resources;component/Images/Game/saveMe.png" IsHitTestVisible="False" Visibility="{Binding IsDying, Converter={StaticResource boolToVisibilityConverter}}" Stretch="Fill" VerticalAlignment="Bottom"/>
                            <Border x:Name="fadeMask" Background="#64000000" Visibility="Hidden" IsHitTestVisible="False">
                                <i:Interaction.Behaviors>
                                    <ei:DataStateBehavior Value="true" TrueState="Faded" FalseState="Unfaded" Binding="{Binding IsFaded}"/>
                                </i:Interaction.Behaviors>
                            </Border>
                        </Grid>
                    </Grid>

                    <!--Image Source="{DynamicResource PlayerInfoView.Decoration.TopLeft}" Width="64" HorizontalAlignment="Left" Margin="-8.75,-5.25,0,0" Grid.RowSpan="2" VerticalAlignment="Top" Visibility="Hidden"/-->
                    <Image x:Name="allegianceMask" IsHitTestVisible="False" Source="{res:ResourceKeyBinding Path=Allegiance, StringFormat=Allegiance.\{0\}.Mask}" HorizontalAlignment="Left" Grid.RowSpan="2" Width="38" Stretch="Fill" Margin="-3,4,0,0" ClipToBounds="True" Height="119" VerticalAlignment="Top"/>
                    <Image x:Name="allegianceIcon" IsHitTestVisible="False" Source="{res:ResourceKeyBinding Path=Allegiance, StringFormat=Allegiance.\{0\}.Icon}" HorizontalAlignment="Left" />
                    <Image x:Name="allegianceMask2" IsHitTestVisible="False" Visibility="{Binding Hero2,Converter={StaticResource objectToVisibilityConverter}}" Source="{res:ResourceKeyBinding Path=Hero2Model.Allegiance, StringFormat=Allegiance.\{0\}.Mask}" HorizontalAlignment="Right" Grid.RowSpan="2" Width="38" Stretch="Fill" Margin="0,4,-3,0" ClipToBounds="True" Height="119" VerticalAlignment="Top" RenderTransformOrigin="0.5,0.5">
                        <Image.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform ScaleX="-1"/>
                                <SkewTransform/>
                                <RotateTransform/>
                                <TranslateTransform/>
                            </TransformGroup>
                        </Image.RenderTransform>
                    </Image>
                    <local:RoleBox x:Name="cbRoleBox" HorizontalAlignment="Right" Width="25" Height="26"/>

                    <ItemsControl x:Name="heroNameArea" ItemsSource="{Binding Hero1Model.NameChars}" Grid.Row="1"
                              HorizontalAlignment="Left"                              
                              Margin="2,0,0,30"
                              Width="20"
							  IsHitTestVisible="False"
                              VerticalAlignment="Top"
                              MaxHeight="55">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <UniformGrid Columns="1"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Viewbox Margin="0, -2, 0, -2" Stretch="Fill" StretchDirection="DownOnly">
                                    <local:OutlinedTextBlock TextWrapping="NoWrap"
                                                         Fill="White"
                                                         Stroke="Black"
                                                         StrokeThickness="1"
                                                         FontWeight="Bold"
                                                         Text="{Binding DataContext, RelativeSource={RelativeSource Self}}" 
                                                         FontFamily="pack://application:,,,/Resources;component/Fonts/#LiSu" FontSize="18.667" 
                                                         VerticalAlignment="Center" TextAlignment="Center"
                                                         TextTrimming="None"/>
                                </Viewbox>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                        <ItemsControl.Effect>
                            <DropShadowEffect Color="Black" BlurRadius="10" ShadowDepth="0"/>
                        </ItemsControl.Effect>
                    </ItemsControl>

                    <ItemsControl x:Name="heroNameArea2" ItemsSource="{Binding Hero2Model.NameChars}" Grid.Row="1"
                              HorizontalAlignment="Right"                              
                              Margin="0,0,2,30"
                              Width="20"
							  IsHitTestVisible="False"
                              VerticalAlignment="Top"
                              MaxHeight="55"
							  Visibility="{Binding Hero2,Converter={StaticResource objectToVisibilityConverter}}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <UniformGrid Columns="1"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Viewbox Margin="0, -2, 0, -2" Stretch="Fill" StretchDirection="DownOnly">
                                    <local:OutlinedTextBlock TextWrapping="NoWrap"
                                                         Fill="White"
                                                         Stroke="Black"
                                                         StrokeThickness="1"
                                                         FontWeight="Bold"
                                                         Text="{Binding DataContext, RelativeSource={RelativeSource Self}}" 
                                                         FontFamily="pack://application:,,,/Resources;component/Fonts/#LiSu" FontSize="18.667" 
                                                         VerticalAlignment="Center" TextAlignment="Center"
                                                         TextTrimming="None"/>
                                </Viewbox>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                        <ItemsControl.Effect>
                            <DropShadowEffect Color="Black" BlurRadius="10" ShadowDepth="0"/>
                        </ItemsControl.Effect>
                    </ItemsControl>

                    <TextBlock x:Name="userNameText" VerticalAlignment="Bottom" Text="{Binding Account.UserName, Mode=OneWay}" Margin="32.117,0,25,4" Foreground="White" FontSize="14" FontFamily="SimHei" Height="17.97" FontWeight="Bold" TextAlignment="Center">
                        <TextBlock.Effect>
                            <DropShadowEffect ShadowDepth="0"/>
                        </TextBlock.Effect>
                    </TextBlock>
                    <Border x:Name="handcardNumArea" Grid.Row="1" HorizontalAlignment="Left" Height="17" Width="16" VerticalAlignment="Bottom" Background="#FFF4E5B5" BorderThickness="1" BorderBrush="#FF332D22" Margin="5,0,0,0">
                        <TextBlock x:Name="handCardNum" TextWrapping="Wrap" Text="{Binding HandCardCount}" TextAlignment="Center" FontFamily="Arial" Foreground="Black"/>
                    </Border>

                    <Grid x:Name="equipArea" Grid.Row="2">
                        <Image Source="{DynamicResource PlayerInfoView.EquipmentSquare}" Grid.Row="2" Stretch="Fill" Margin="3,0,0,0" Width="15" Height="16" HorizontalAlignment="Left" VerticalAlignment="Top" d:LayoutOverrides="GridBox"/>
                        <Image Source="{DynamicResource PlayerInfoView.EquipmentSquare}" Grid.Row="2" Stretch="Fill" Margin="3,15,0,0" Width="15" HorizontalAlignment="Left" d:LayoutOverrides="GridBox" Height="16" VerticalAlignment="Top"/>
                        <Image Source="{DynamicResource PlayerInfoView.EquipmentSquare}" Grid.Row="2" Stretch="Fill" Margin="3,30,0,0" Width="15" Height="16" HorizontalAlignment="Left" VerticalAlignment="Top" d:LayoutOverrides="GridBox"/>
                        <Image Source="{DynamicResource PlayerInfoView.EquipmentSquare}" Grid.Row="2" Stretch="Fill" Margin="3,45,0,0" Width="15" Height="16" HorizontalAlignment="Left" VerticalAlignment="Top" d:LayoutOverrides="GridBox"/>
                        <Image Source="{DynamicResource PlayerInfoView.Dragon}" Stretch="Fill" VerticalAlignment="Center" Width="64" Height="56"/>
                        <Canvas x:Name="weaponArea" Margin="3,0,5,0" Height="15" Width="140" VerticalAlignment="Top" />
                        <Canvas x:Name="armorArea" Margin="3,15,5,0" Height="15" Width="140" VerticalAlignment="Top" />
                        <Canvas x:Name="horse1Area" Margin="3,30,5,0" Height="15" Width="140"  VerticalAlignment="Top" />
                        <Canvas x:Name="horse2Area" Margin="3,45,5,0" Height="15" Width="140"  VerticalAlignment="Top" />
                    </Grid>
                    <Grid x:Name="ironShackleArea" Grid.Row="1" Height="22" VerticalAlignment="Bottom" Margin="-14.333,0,-15.667,-7.834">
                        <Grid.ToolTip>
                            <ToolTip Content="{DynamicResource State.TieSuoLianHuan.Description}" ContentTemplate="{DynamicResource ToolTipTextTemplate}" />
                        </Grid.ToolTip>
                        <Image Source="/Resources;component/Images/Game/IronShackled.png" Stretch="Fill" Visibility="{Binding IsIronShackled, Converter={StaticResource boolToVisibilityConverter}}"/>
                        <anim:TieSuoAnimation2 x:Name="tieSuoAnimation2" FramesPerSecond="15" Stretch="Fill" IsHitTestVisible="False"/>
                    </Grid>
                    <Grid x:Name="gridSpectate" HorizontalAlignment="Right" Height="24" Margin="0,0,105,-3" Grid.Row="1" Width="24" VerticalAlignment="Bottom" Visibility="{Binding CanSpectate, Mode=OneWay,Converter={StaticResource boolToVisibilityConverter}}">
                        <Button x:Name="btnSpectate" Content="Button" Style="{DynamicResource SpectateButton}" Visibility="Hidden" Click="btnSpectate_Click">
                            <Button.Clip>
                                <RectangleGeometry Rect="0, 5, 25, 15"/>
                            </Button.Clip>
                        </Button>
                    </Grid>
                </Grid>
                <Image x:Name="decoration" Source="{DynamicResource PlayerInfoView.Decoration.BottomRight}" Width="64" HorizontalAlignment="Right" Margin="0,0,1.25,3.25" VerticalAlignment="Bottom" IsHitTestVisible="False" />
                <Image x:Name="imgPhase" Visibility="{Binding IsCurrentPlayer, Converter={StaticResource boolToVisibilityConverter}}" Source="{res:ResourceKeyBinding Path=CurrentPhase, StringFormat=Phases.\{0\}.Small}" HorizontalAlignment="Right" VerticalAlignment="Bottom" Width="120" IsHitTestVisible="False" />
                <StackPanel x:Name="delayedToolsDock"  Orientation="Horizontal" VerticalAlignment="Bottom" HorizontalAlignment="Right" Margin="-12,0,15,0" >
                    <i:Interaction.Behaviors>
                        <ei:FluidMoveBehavior AppliesTo="Children" Duration="0:0:5">
                            <ei:FluidMoveBehavior.EaseX>
                                <BackEase EasingMode="EaseOut"/>
                            </ei:FluidMoveBehavior.EaseX>
                        </ei:FluidMoveBehavior>
                    </i:Interaction.Behaviors>
                </StackPanel>
                <Canvas x:Name="animationCenter2" Margin="0,0,0,20" VerticalAlignment="Bottom" HorizontalAlignment="Center" IsHitTestVisible="False" />
                <Canvas x:Name="animationCenter1" Margin="0,80,0,0" VerticalAlignment="Top" HorizontalAlignment="Center" IsHitTestVisible="False" />
                <anim:TieSuoAnimation x:Name="tieSuoAnimation" FramesPerSecond="15" IsHitTestVisible="False" Height="180" Width="202" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,0,0,20"/>
            </Grid>
            <Image x:Name="deathIcon" Source="{res:ImageBinding Path=Role, ResourceKeyFormat=Death.Role.\{0\}.Image, StringFormat=Resources/Images/Death/\{0\}.png}" Stretch="None" HorizontalAlignment="Center" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5" IsHitTestVisible="False" Opacity="0">
                <Image.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Image.RenderTransform>
            </Image>
        </Grid>
    </Grid>
</local:PlayerViewBase>